/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Persistence.BolsaExtensaoPersistence;
import Persistence.IniciacaoCientificaPersistence;
import Persistence.MonitoriaPersistence;
import Persistence.Persistence;
import Persistence.TreinamentoProfissionalPersistence;
import com.mycompany.sistemadegerenciamentodebolsas.Projeto;
import com.mycompany.sistemadegerenciamentodebolsas.Disciplina;
import com.mycompany.sistemadegerenciamentodebolsas.Extensao;
import com.mycompany.sistemadegerenciamentodebolsas.IniciacaoCientifica;
import com.mycompany.sistemadegerenciamentodebolsas.Monitoria;
import com.mycompany.sistemadegerenciamentodebolsas.Professor;
import com.mycompany.sistemadegerenciamentodebolsas.TreinamentoProfissional;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 * Autores do trabalho:
 *
 * Nome: Maria Clara Ribeiro de Menezes Matricula: 202165101AC
 *
 * Nome: Igor Titoneli Almeida Matricula: 202165064AB
 *
 * Nome: Christian Rafael De Oliveira Coelho Matricula: 202065249AC
 *
 * Nome: Marlon Ruffo Nascimento Matricula: 202065165AC
 */
public class CadastroBolsa extends javax.swing.JFrame {

    private Professor user;
    HomeProfessor tela;

    public CadastroBolsa(Professor user, HomeProfessor tela) {

        this.user = user;
        this.tela = tela;
        initComponents();
        setSize(700, 700);
        setLocationRelativeTo(null);

    }

    /**
     * Creates new form VisualizaçãoBolsa
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tituloPrincipal = new javax.swing.JLabel();
        labelCargaHor = new javax.swing.JLabel();
        labelValor = new javax.swing.JLabel();
        labelTipo = new javax.swing.JLabel();
        labelTitulo = new javax.swing.JLabel();
        labelMetodoEntrada = new javax.swing.JLabel();
        tituloTf = new javax.swing.JTextField();
        tipoBolsaSelect = new javax.swing.JComboBox<>();
        valorTf = new javax.swing.JTextField();
        cargaHorariaTf1 = new javax.swing.JTextField();
        metodoEntradaSelect = new javax.swing.JComboBox<>();
        labelVagas = new javax.swing.JLabel();
        qtdVagasSpinner = new javax.swing.JSpinner();
        labelPreRequisitos1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPreRequisitosSelect = new javax.swing.JList<>();
        cadastrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(610, 410));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tituloPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        tituloPrincipal.setForeground(new java.awt.Color(65, 142, 218));
        tituloPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloPrincipal.setText("Cadastro de Bolsa");
        tituloPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelCargaHor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelCargaHor.setText("Carga Horária Semanal:");

        labelValor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelValor.setText("Valor:");

        labelTipo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTipo.setText("Tipo:");

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTitulo.setText("Título: ");

        labelMetodoEntrada.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelMetodoEntrada.setText("Método de Entrada:");

        tipoBolsaSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Monitoria", "Iniciação Científica", "Treinamento Profissional", "Bolsa Extensao" }));
        tipoBolsaSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoBolsaSelectActionPerformed(evt);
            }
        });

        valorTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorTfActionPerformed(evt);
            }
        });

        cargaHorariaTf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaHorariaTf1ActionPerformed(evt);
            }
        });

        metodoEntradaSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Prova", "Entrevista" }));
        metodoEntradaSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoEntradaSelectActionPerformed(evt);
            }
        });

        labelVagas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelVagas.setText("Vagas:");

        qtdVagasSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 15, 1));
        qtdVagasSpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelPreRequisitos1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelPreRequisitos1.setText("Pré-Requisitos:");

        listaPreRequisitosSelect.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "ANE40", "CAD076", "DCC001", "DCC008", "DCC012", "DCC013", "DCC014", "DCC019", "DCC025", "DCC033", "DCC037", "DCC042", "DCC045", "DCC055", "DCC059", "DCC060", "DCC061", "DCC062", "DCC063", "DCC064", "DCC065", "DCC066", "DCC067", "DCC068", "DCC069", "DCC070", "DCC071", "DCC072", "DCC073", "DCC074", "DCC075", "DCC076", "DCC078", "DCC080", "DCC082", "DCC083", "DCC086", "DCC088", "DCC089", "DCC090", "DCC091", "DCC092", "DCC093", "DCC094", "DCC095", "DCC096", "DCC097", "DCC098", "DCC099", "DCC100", "DCC101", "DCC102", "DCC103", "DCC104", "DCC105", "DCC117", "DCC122", "DCC123", "DCC124", "DCC125", "DCC126", "DCC127", "DCC128", "DCC129", "DCC130", "DCC131", "DCC132", "DCC133", "DCC136", "DCC137", "DCC138", "DCC139", "DCC140", "DCC141", "DCC142", "DCC143", "DCC144", "DCC145", "DCC147", "DCC148", "DCC149", "DCC152", "DCC153", "DCC154", "DCC155", "DCC159", "DCC160", "DCC161", "DCC162", "DCC163", "DCC164", "DCC165", "DCC166", "DCC167", "DCC168", "DCC171", "DCC172", "DCC174", "DCC176", "DCC177", "DCC178", "DCC179", "DCC180", "DCC181", "DCC182", "DCC183", "DCC184", "DCC185", "DCC186", "DCC187", "DCC188", "DCC189", "DCC190", "DCC199", "DCC200", "DC5199", "DC5200", "DPR032", "EADCC037", "EADCC043", "EADCC044", "EADDCC048", "EADDCC049", "EST028", "EST029", "EST030", "FIL012", "FIN001", "FIS073", "FIS074", "FIS075", "FIS077", "FIS122", "ICE001", "LEC003", "LEM184", "MAC011", "MAC013", "MAT013", "MAT029", "MAT143", "MAT154", "MAT155", "MAT156", "MAT157", "MAT158", "QUI125", "QUI126", "QUI168", "UNI001", "UNI002", "UNI003" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaPreRequisitosSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(listaPreRequisitosSelect);

        cadastrar.setBackground(new java.awt.Color(65, 142, 218));
        cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        cadastrar.setText("Cadastrar");
        cadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastrarMouseClicked(evt);
            }
        });
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(labelVagas)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(qtdVagasSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(labelMetodoEntrada)
                        .addComponent(labelCargaHor)
                        .addComponent(labelValor)
                        .addComponent(labelTitulo)
                        .addComponent(tituloTf)
                        .addComponent(labelTipo)
                        .addComponent(tipoBolsaSelect, 0, 589, Short.MAX_VALUE)
                        .addComponent(valorTf)
                        .addComponent(cargaHorariaTf1)
                        .addComponent(metodoEntradaSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelPreRequisitos1)
                        .addComponent(jScrollPane1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tituloPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(tituloPrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tituloTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tipoBolsaSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelValor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCargaHor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cargaHorariaTf1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelMetodoEntrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(metodoEntradaSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelVagas)
                    .addComponent(qtdVagasSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPreRequisitos1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        labelTitulo.getAccessibleContext().setAccessibleName("Título");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(jLabel1))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tipoBolsaSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoBolsaSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoBolsaSelectActionPerformed

    private void valorTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorTfActionPerformed

    private void metodoEntradaSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoEntradaSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metodoEntradaSelectActionPerformed

    private void cargaHorariaTf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaHorariaTf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargaHorariaTf1ActionPerformed

    private void cadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrarMouseClicked

    }//GEN-LAST:event_cadastrarMouseClicked

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        
        String titulo = tituloTf.getText();
        int tipoBolsa = tipoBolsaSelect.getSelectedIndex();
        String nomeTipo = (String) tipoBolsaSelect.getSelectedItem();
        String nomeMetodoEntrada = (String) metodoEntradaSelect.getSelectedItem();
        int qtdVagas = (int) qtdVagasSpinner.getValue();
        String valor = valorTf.getText();
        float valorFloat = Float.parseFloat(valor);
        String cargaHoraria = cargaHorariaTf1.getText();
        int cargaHorariaInt = Integer.parseInt(cargaHoraria);
        int metodoEntrada = metodoEntradaSelect.getSelectedIndex();
        int vagas = (int) qtdVagasSpinner.getValue();

        List<Disciplina> lista = new ArrayList<>();
        List<String> listaPreRequisitos = new ArrayList<>();
        List<Monitoria> listaMonitoria = new ArrayList<>();
        List<IniciacaoCientifica> listaIC = new ArrayList<>();
        List<TreinamentoProfissional> listaTP = new ArrayList<>();
        List<Extensao> listaBExtensao = new ArrayList<>();

        for (String preRequisito : listaPreRequisitosSelect.getSelectedValuesList()) {
            listaPreRequisitos.add(preRequisito);
        }
        
        if (bolsaIsValid()) {
            if (tipoBolsa == 1) {
                // Construtor da bolsa MONITORIA

                Monitoria bolsaMonitoria = new Monitoria(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaMonitoria.add(bolsaMonitoria);
                Persistence<Monitoria> monitoriaPersistence = new MonitoriaPersistence();
                monitoriaPersistence.save(listaMonitoria);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Monitoria cadastrada com sucesso!");
                
            }
            if (tipoBolsa == 2) {
                // Construtor da bolsa Inic.Cientifica
                IniciacaoCientifica bolsaIC = new IniciacaoCientifica(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaIC.add(bolsaIC);
                Persistence<IniciacaoCientifica> icPersistence = new IniciacaoCientificaPersistence();
                icPersistence.save(listaIC);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Iniciação Científica cadastrada com sucesso!");
            }
            if (tipoBolsa == 3) {
                // Construtor da bolsa Treinamento P.
                TreinamentoProfissional bolsaTP = new TreinamentoProfissional(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaTP.add(bolsaTP);
                Persistence<TreinamentoProfissional> tpPersistence = new TreinamentoProfissionalPersistence();
                tpPersistence.save(listaTP);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Treinamento Profissional cadastrada com sucesso!");
            }
            if (tipoBolsa == 4) {
                // Construtor da bolsa Extensão
                Extensao bolsaBE = new Extensao(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaBExtensao.add(bolsaBE);
                Persistence<Extensao> bePersistence = new BolsaExtensaoPersistence();
                bePersistence.save(listaBExtensao);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Extensão cadastrada com sucesso!");
            }
        }
        
    }//GEN-LAST:event_cadastrarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        tela.dispose();
        HomeProfessor telaRecarregar = new HomeProfessor(this.user);
        telaRecarregar.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    public static boolean validarValor(String valor) {
        if (valor.isEmpty()) {
            return false;
        }
        String regex = "^[0-9]{1,45}$";
        return valor.matches(regex);
    }

    public static boolean validarTitulo(String titulo) {
        // Regex para verificar se o nome contém apenas letras e espaços em branco
        if (titulo.length() < 3) {
            return false;
        }

        String regex = "^[a-zA-Z\\s]+$";

        // Verifica se o nome corresponde ao regex
        return titulo.matches(regex);
    }

    private boolean bolsaIsValid() {
        String titulo = tituloTf.getText();
        int tipoBolsa = tipoBolsaSelect.getSelectedIndex();
        //String professor = professorTf.getText();
        String valor = valorTf.getText();
        String cargaHoraria = cargaHorariaTf1.getText();
        int metodoEntrada = metodoEntradaSelect.getSelectedIndex();
        int vagas = (int) qtdVagasSpinner.getValue();

        if (validarTitulo(titulo)) {
            if (tipoBolsa != 0) {
                if (validarValor(valor)) {
                    if (validarValor(cargaHoraria)) {
                        if (metodoEntrada != 0) {
                            return true;
                        } else {
                            JOptionPane.showMessageDialog(this, "Escolha um método de entrada", "Erro", JOptionPane.ERROR_MESSAGE);

                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Adicione uma carga horaria valida", "Erro", JOptionPane.ERROR_MESSAGE);

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Adicione um valor válido", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione o tipo de bolsa", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Insira um título válido", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroBolsa(null).setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JTextField cargaHorariaTf1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCargaHor;
    private javax.swing.JLabel labelMetodoEntrada;
    private javax.swing.JLabel labelPreRequisitos1;
    private javax.swing.JLabel labelTipo;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelVagas;
    private javax.swing.JLabel labelValor;
    private javax.swing.JList<String> listaPreRequisitosSelect;
    private javax.swing.JComboBox<String> metodoEntradaSelect;
    private javax.swing.JSpinner qtdVagasSpinner;
    private javax.swing.JComboBox<String> tipoBolsaSelect;
    private javax.swing.JLabel tituloPrincipal;
    private javax.swing.JTextField tituloTf;
    private javax.swing.JTextField valorTf;
    // End of variables declaration//GEN-END:variables
}
