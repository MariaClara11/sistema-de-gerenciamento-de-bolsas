/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Persistence.BolsaExtensaoPersistence;
import Persistence.IniciacaoCientificaPersistence;
import Persistence.MonitoriaPersistence;
import Persistence.Persistence;
import Persistence.TreinamentoProfissionalPersistence;
import com.mycompany.sistemadegerenciamentodebolsas.Projeto;
import com.mycompany.sistemadegerenciamentodebolsas.Disciplina;
import com.mycompany.sistemadegerenciamentodebolsas.Extensao;
import com.mycompany.sistemadegerenciamentodebolsas.IniciacaoCientifica;
import com.mycompany.sistemadegerenciamentodebolsas.Monitoria;
import com.mycompany.sistemadegerenciamentodebolsas.Professor;
import com.mycompany.sistemadegerenciamentodebolsas.TreinamentoProfissional;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 * Autores do trabalho:
 *
 * Nome: Maria Clara Ribeiro de Menezes Matricula: 202165101AC
 *
 * Nome: Igor Titoneli Almeida Matricula: 202165064AB
 *
 * Nome: Christian Rafael De Oliveira Coelho Matricula: 202065249AC
 *
 * Nome: Marlon Ruffo Nascimento Matricula: 202065165AC
 */
public class CadastroBolsa extends javax.swing.JFrame {

    private Professor user;
    HomeProfessor tela;

    public CadastroBolsa(Professor user, HomeProfessor tela) {

        this.user = user;
        this.tela = tela;
        initComponents();
        setSize(700, 700);
        setLocationRelativeTo(null);

    }

    /**
     * Creates new form VisualizaçãoBolsa
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tituloPrincipal = new javax.swing.JLabel();
        labelCargaHor = new javax.swing.JLabel();
        labelValor = new javax.swing.JLabel();
        labelTipo = new javax.swing.JLabel();
        labelTitulo = new javax.swing.JLabel();
        labelMetodoEntrada = new javax.swing.JLabel();
        tituloTf = new javax.swing.JTextField();
        tipoBolsaSelect = new javax.swing.JComboBox<>();
        valorTf = new javax.swing.JTextField();
        cargaHorariaTf1 = new javax.swing.JTextField();
        metodoEntradaSelect = new javax.swing.JComboBox<>();
        labelVagas = new javax.swing.JLabel();
        qtdVagasSpinner = new javax.swing.JSpinner();
        labelPreRequisitos1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPreRequisitosSelect = new javax.swing.JList<>();
        cadastrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(610, 410));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tituloPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        tituloPrincipal.setForeground(new java.awt.Color(65, 142, 218));
        tituloPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloPrincipal.setText("Cadastro de Bolsa");
        tituloPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelCargaHor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelCargaHor.setText("Carga Horária Semanal:");

        labelValor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelValor.setText("Valor:");

        labelTipo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTipo.setText("Tipo:");

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTitulo.setText("Título: ");

        labelMetodoEntrada.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelMetodoEntrada.setText("Método de Entrada:");

        tipoBolsaSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Monitoria", "Iniciação Científica", "Treinamento Profissional", "Bolsa Extensao" }));
        tipoBolsaSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoBolsaSelectActionPerformed(evt);
            }
        });

        valorTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorTfActionPerformed(evt);
            }
        });

        cargaHorariaTf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaHorariaTf1ActionPerformed(evt);
            }
        });

        metodoEntradaSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Prova", "Entrevista" }));
        metodoEntradaSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoEntradaSelectActionPerformed(evt);
            }
        });

        labelVagas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelVagas.setText("Vagas:");

        qtdVagasSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 15, 1));
        qtdVagasSpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelPreRequisitos1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelPreRequisitos1.setText("Pré-Requisitos:");

        listaPreRequisitosSelect.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "DCC001-ANALISE E PROJETO DE ALGORITMOS", "DCC008-CALCULO NUMERICO", "DCC012-ESTRUTURA DE DADOS II", "DCC013-ESTRUTURA DE DADOS", "DCC014-INTELIGENCIA ARTIFICIAL", "DCC019-LINGUAGEM DE PROGRAMACAO", "DCC025-ORIENTAÇÃO A OBJETOS", "DCC033-FLUXO EM REDES", "DCC037-LABORATORIO DE ORGANIZACAO DE COMPUTADORES", "DCC042-REDES DE COMPUTADORES", "DCC045-TEORIA DOS COMPILADORES", "DCC049-EMPREENDIMENTOS EM INFORMATICA", "DCC055-TEORIA DA COMPUTAÇÃO", "DCC057-ARQUITETURA DE COMPUTADORES", "DCC059-TEORIA DOS GRAFOS", "DCC060-BANCO DE DADOS", "DCC061-ENGENHARIA DE SOFTWARE", "DCC062-SISTEMAS OPERACIONAIS", "DCC063-LINGUAGENS FORMAIS E AUTÔMATOS", "DCC064-SISTEMAS DISTRIBUÍDOS", "DCC065-COMPUTACAO GRAFICA", "DCC066-PROCESSAMENTO DE IMAGENS", "DCC067-COMPUTAÇÃO EVOLUCIONISTA", "DCC068-REDES NEURAIS ARTIFICIAIS", "DCC069-PROGRAMAÇÃO NÃO LINEAR", "DCC070-ORGANIZAÇÃO DE COMPUTADORES", "DCC071-LABORATÓRIO DE SISTEMAS OPERACIONAIS", "DCC072-LABORATORIO DE REDES DE COMPUTADORES", "DCC073-TEORIA DE FILAS", "DCC074-AVALIAÇÃO DE DESEMPENHO DE SISTEMAS", "DCC075-SEGURANÇA EM SISTEMAS DE COMPUTAÇÃO", "DCC076-PROGRAMAÇÃO EM LÓGICA", "DCC077-ASPECTOS AVANCADOS EM BANCO DE DADOS", "DCC078-ASPECTOS AVANCADOS EM ENGENHARIA DE SOFTWARE", "DCC079-PROGRAMAÇÃO PARA A WEB", "DCC080-LAB.INTEGRADO DE DESENVOLVIMENTO DE SOFTWARE", "DCC082-SISTEMAS MULTIMIDIA", "DCC083-QUALIDADE DE SOFTWARE", "DCC086-INFORMATICA NA EDUCACAO", "DCC088-GESTAO DA TECNOLOGIA E INOVACAO TECNOLOGICA", "DCC089-TOPICOS EM COMPUTACAO CIENTIFICA I", "DCC090-TOPICOS EM COMPUTACAO CIENTIFICA II", "DCC091-TOPICOS EM REDES E PROCESSAMENTO DISTRIBUIDO I", "DCC092-TOPICOS EM REDES E PROCESSAMENTO DISTRIBUIDO II", "DCC093-TOPICOS EM DESENVOLVIMENTO DE SOFTWARE I", "DCC094-TOPICOS EM DESENVOLVIMENTO DE SOFTWARE II", "DCC095-TOPICOS EM CIENCIA", "TECNOLOGIA E SOCIEDADE I", "DCC096-TOPICOS EM CIENCIA", "TECNOLOGIA E SOCIEDADE II", "DCC097-SEMINARIO EM COMPUTACAO I", "DCC098-SEMINARIO EM COMPUTACAO II", "DCC099-SEMINARIO EM COMPUTACAO III", "DCC100-SEMINARIO EM COMPUTACAO IV", "DCC101-SEMINARIO EM COMPUTACAO V", "DCC102-SEMINARIO EM COMPUTACAO VI", "DCC103-SEMINARIO EM COMPUTACAO VII", "DCC104-SEMINARIO EM COMPUTACAO VIII", "DCC105-SEMINARIO EM COMPUTACAO IX", "DCC107-LABORATÓRIO DE PROGRAMAÇÃO II", "DCC110-MONOGRAFIA FINAL EM COMPUTAÇÃO", "DCC117-MODELAGEM DE SISTEMAS", "DCC118-INFORMÁTICA E SOCIEDADE", "DCC119-ALGORITMOS", "DCC119E-ALGORITMOS", "DCC120-LABORATÓRIO DE PROGRAMAÇÃO", "DCC121-LABORATÓRIO DE PROGRAMAÇÃO WEB", "DCC122-CIRCUITOS DIGITAIS", "DCC123-METODOLOGIA CIENTÍFICA EM COMPUTAÇÃO", "DCC124-AMBIENTES VIRTUAIS DE APRENDIZAGEM", "DCC125-PROGRAMAÇÃO PARALELA", "DCC126-TV DIGITAL", "DCC127-MINERAÇÃO DE DADOS", "DCC128-GERÊNCIA DE REDES", "DCC129-REALIDADE VIRTUAL E AUMENTADA", "DCC130-COMPUTAÇÃO MÓVEL", "ÚBIQUA E PERVASIVA", "DCC131-PROJETO DE REDES DE COMPUTADORES", "DCC132-ENGENHARIA DE SOFTWARE EXPERIMENTAL", "DCC133-INTRODUÇÃO A SISTEMAS DE INFORMAÇÃO", "DCC134-MODELAGEM DE SISTEMAS DE INFORMAÇÃO", "DCC136-INTELIGÊNCIA COMPUTACIONAL", "DCC137-SISTEMAS NEBULOSOS", "DCC138-TÓPICOS DE LINGUAGEM PROGRAMAÇÃO I", "DCC139-TÓPICOS DE LINGUAGEM PROGRAMAÇÃO II", "DCC140-TÓPICOS EM INTELIGÊNCIA COMPUTACIONAL I", "DCC141-TÓPICOS EM INTELIGÊNCIA COMPUTACIONAL II", "DCC142-ANÁLISE E PROJETO DE ALGORITMOS II", "DCC143-ADMINISTRAÇÃO DE DADOS", "DCC144-ADMINISTRAÇÃO DE REDES", "DCC145-ASPECTOS ORGANIZACIONAIS DE SISTEMAS DE INFORMAÇÃO", "DCC146-ASPECTOS TEÓRICOS DA COMPUTAÇÃO", "DCC147-DATA WAREHOUSE", "DCC148-DESENVOLVIMENTO DE JOGOS", "DCC149-ENGENHARIA DE REQUISITOS", "DCC152-FUNDAMENTOS DE DESENVOLVIMENTO WEB", "DCC153-GERÊNCIA DE CONFIGURAÇÃO DE SOFTWARE", "DCC154-GERÊNCIA DE PROJETOS", "DCC155-GESTÃO DO CONHECIMENTO", "DCC156-LABORATÓRIO DE PROGRAMAÇÃO IV", "DCC157-LABORATÓRIO DE PROGRAMAÇÃO V", "DCC158-LABORATÓRIO DE PROGRAMAÇÃO VI", "DCC159-LABORATÓRIO DE APLICAÇÕES DE REDES DE COMPUTADORES", "DCC160-LÓGICA E FUNDAMENTOS PARA A COMPUTAÇÃO", "DCC161-MODELAGEM DE NEGÓCIO", "DCC162-PADRÕES DE PROJETO", "DCC163-PESQUISA OPERACIONAL", "DCC164-RECUPERAÇÃO DA INFORMAÇÃO", "DCC165-SEGURANÇA E AUDITORIA DE SISTEMAS", "DCC166-SISTEMAS DE APOIO À DECISÃO", "DCC167-SISTEMAS INTELIGENTES", "DCC168-TESTE DE SOFTWARE", "DCC170-TRABALHO DE CONCLUSÃO DE BACHARELADO EM SISTEMAS DE INFORMAÇÃO", "DCC171-LABORATÓRIO DE PROGRAMAÇÃO III", "DCC172-PROGRAMAÇÃO COMPETITIVA", "DCC173-ANALISE NUMERICA", "DCC174-INTERAÇÃO HUMANO-COMPUTADOR", "DCC175-INTRODUÇÃO A CIÊNCIA DA COMPUTAÇÃO", "DCC176-SISTEMAS COLABORATIVOS", "DCC177-PESQUISA OPERACIONAL II", "DCC178-PESQUISA OPERACIONAL III", "DCC179-LABORATÓRIO DE CIÊNCIA DA COMPUTAÇÃO", "DCC180-ESTÁGIO SUPERVISIONADO", "DCC181-ESTÁGIO SUPERVISIONADO II", "DCC182-ESTÁGIO SUPERVISIONADO III", "DCC183-ESTÁGIO SUPERVISIONADO IV", "DCC184-ESTÁGIO SUPERVISIONADO V", "DCC185-ESTÁGIO SUPERVISIONADO VI", "DCC186-ESTÁGIO SUPERVISIONADO VII", "DCC187-ESTÁGIO SUPERVISIONADO VIII", "DCC188-ESTÁGIO SUPERVISIONADO IX", "DCC189-ESTÁGIO SUPERVISIONADO X", "DCC190-SOLUÇÃO NUMÉRICA DE EQUAÇÕES DIFERENCIAIS", "DCC191-VISUALIZAÇÃO CIENTÍFICA", "EADDCC001-INTRODUÇÃO À EAD", "EADDCC002-INTRODUÇÃO ÀS TECNOLOGIAS DA INFORMAÇÃO E DA COMUNICAÇÃO", "EADDCC003-LÓGICA PARA COMPUTAÇÃO", "EADDCC006-INTRODUÇÃO AOS SISTEMAS OPERACIONAIS", "EADDCC007-FUNDAMENTOS DA ORGANIZAÇÃO DE COMPUTADORES", "EADDCC008-ALGORÍTMOS", "EADDCC009-FUNDAMENTOS DE REDES DE COMPUTADORES", "EADDCC011-INGLÊS INSTRUMENTAL", "EADDCC012-METODOLOGIA DE PESQUISA CIENTÍFICA E EDUCACIONAL", "EADDCC013-SEMINÁRIO INTEGRADO I", "EADDCC014-LINGUAGEM DE PROGRAMAÇÃO I", "EADDCC015-LABORATÓRIO DE MONTAGEM E MANUTENÇÃO", "EADDCC021-SEMINÁRIO INTEGRADO II", "EADDCC023-PROGRAMAÇÃO PARA WEB I", "EADDCC024-FUNDAMENTOS DE SISTEMAS DE INFORMAÇÃO", "EADDCC025-MODELAGEM DE SISTEMAS", "EADDCC029-SISTEMAS MULTIMÍDIAS", "EADDCC030-FUNDAMENTOS DE BANCO DE DADOS", "EADDCC031-LINGUAGEM DE PROGRAMAÇÃO II", "EADDCC032-FUNDAMENTOS DE ENGENHARIA DE SOFTWARE", "EADDCC033-MÉTODOS DE ENSINO DE APRENDIZAGEM EM INFORMÁTICA", "EADDCC034-ESTÁGIO SUPERVISIONADO I", "EADDCC035-PROGRAMAÇÃO PARA WEB II", "EADDCC036-INTERFACE USUÁRIO – MÁQUINA", "EADDCC037-PROJETO DE SOFTWARE EDUCACIONAL", "EADDCC038-INFORMÁTICA NA EDUCAÇÃO", "EADDCC039-OFICINA DE GESTÃO DE SALA DE AULA", "EADDCC040-OFICINA DE AVALIAÇÃO EDUCACIONAL", "EADDCC041-ESTÁGIO SUPERVISIONADO II", "EADDCC042-TRABALHO DE CONCLUSÃO DE CURSO I", "EADDCC043-AVALIAÇÃO DE SOFTWARE EDUCACIONAL", "EADDCC044-INFORMÁTICA E SOCIEDADE", "EADDCC045-FUNDAMENTOS DA INTELIGÊNCIA ARTIFICIAL", "EADDCC046-EDUCAÇÃO DE JOVENS E ADULTOS", "EADDCC047-ESTÁGIO SUPERVISIONADO III", "EADDCC048-OBJETOS DE APRENDIZAGEM", "EADDCC049-ASPECTOS LEGAIS DA INFORMÁTICA", "EADDCC050-ESTÁGIO SUPERVISIONADO IV", "EADDCC052-TRABALHO DE CONCLUSÃO DE CURSO II", "EADQUI002-INTRODUÇÃO ÀS TECNOLOGIAS DE COMUNICAÇÃO E INFORMAÇÃO I", "EADQUI009-INTRODUÇÃO ÀS TECNOLOGIAS DE COMUNICAÇÃO E INFORMAÇÃO II", "UABFIS005-INTRODUÇÃO À INFORMÁTICA", "UABMAT004-INTRODUÇÃO À INFORMÁTICA" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaPreRequisitosSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(listaPreRequisitosSelect);

        cadastrar.setBackground(new java.awt.Color(65, 142, 218));
        cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        cadastrar.setText("Cadastrar");
        cadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastrarMouseClicked(evt);
            }
        });
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(labelVagas)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(qtdVagasSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(labelMetodoEntrada)
                        .addComponent(labelCargaHor)
                        .addComponent(labelValor)
                        .addComponent(labelTitulo)
                        .addComponent(tituloTf)
                        .addComponent(labelTipo)
                        .addComponent(tipoBolsaSelect, 0, 589, Short.MAX_VALUE)
                        .addComponent(valorTf)
                        .addComponent(cargaHorariaTf1)
                        .addComponent(metodoEntradaSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelPreRequisitos1)
                        .addComponent(jScrollPane1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tituloPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(tituloPrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tituloTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tipoBolsaSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelValor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCargaHor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cargaHorariaTf1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelMetodoEntrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(metodoEntradaSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelVagas)
                    .addComponent(qtdVagasSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPreRequisitos1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        labelTitulo.getAccessibleContext().setAccessibleName("Título");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(jLabel1))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tipoBolsaSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoBolsaSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoBolsaSelectActionPerformed

    private void valorTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorTfActionPerformed

    private void metodoEntradaSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoEntradaSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metodoEntradaSelectActionPerformed

    private void cargaHorariaTf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaHorariaTf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargaHorariaTf1ActionPerformed

    private void cadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrarMouseClicked

    }//GEN-LAST:event_cadastrarMouseClicked

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        
        String titulo = tituloTf.getText();
        int tipoBolsa = tipoBolsaSelect.getSelectedIndex();
        String nomeTipo = (String) tipoBolsaSelect.getSelectedItem();
        String nomeMetodoEntrada = (String) metodoEntradaSelect.getSelectedItem();
        int qtdVagas = (int) qtdVagasSpinner.getValue();
        String valor = valorTf.getText();
        float valorFloat = Float.parseFloat(valor);
        String cargaHoraria = cargaHorariaTf1.getText();
        int cargaHorariaInt = Integer.parseInt(cargaHoraria);
        int metodoEntrada = metodoEntradaSelect.getSelectedIndex();
        int vagas = (int) qtdVagasSpinner.getValue();

        List<Disciplina> lista = new ArrayList<>();
        List<String> listaPreRequisitos = new ArrayList<>();
        List<Monitoria> listaMonitoria = new ArrayList<>();
        List<IniciacaoCientifica> listaIC = new ArrayList<>();
        List<TreinamentoProfissional> listaTP = new ArrayList<>();
        List<Extensao> listaBExtensao = new ArrayList<>();

        for (String preRequisito : listaPreRequisitosSelect.getSelectedValuesList()) {
            listaPreRequisitos.add(preRequisito);
        }
        
        if (bolsaIsValid()) {
            if (tipoBolsa == 1) {
                // Construtor da bolsa MONITORIA

                Monitoria bolsaMonitoria = new Monitoria(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaMonitoria.add(bolsaMonitoria);
                Persistence<Monitoria> monitoriaPersistence = new MonitoriaPersistence();
                monitoriaPersistence.save(listaMonitoria);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Monitoria cadastrada com sucesso!");
                
            }
            if (tipoBolsa == 2) {
                // Construtor da bolsa Inic.Cientifica
                IniciacaoCientifica bolsaIC = new IniciacaoCientifica(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaIC.add(bolsaIC);
                Persistence<IniciacaoCientifica> icPersistence = new IniciacaoCientificaPersistence();
                icPersistence.save(listaIC);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Iniciação Científica cadastrada com sucesso!");
            }
            if (tipoBolsa == 3) {
                // Construtor da bolsa Treinamento P.
                TreinamentoProfissional bolsaTP = new TreinamentoProfissional(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaTP.add(bolsaTP);
                Persistence<TreinamentoProfissional> tpPersistence = new TreinamentoProfissionalPersistence();
                tpPersistence.save(listaTP);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Treinamento Profissional cadastrada com sucesso!");
            }
            if (tipoBolsa == 4) {
                // Construtor da bolsa Extensão
                Extensao bolsaBE = new Extensao(titulo, listaPreRequisitos, valorFloat, cargaHorariaInt, qtdVagas, user.getSiap(), nomeMetodoEntrada);
                listaBExtensao.add(bolsaBE);
                Persistence<Extensao> bePersistence = new BolsaExtensaoPersistence();
                bePersistence.save(listaBExtensao);
                this.user.cadastraBolsa(titulo, tipoBolsa, user.getNome(), valorFloat, cargaHorariaInt, nomeMetodoEntrada, vagas, listaPreRequisitos);
                JOptionPane.showMessageDialog(null, "Bolsa Extensão cadastrada com sucesso!");
            }
        }
        
    }//GEN-LAST:event_cadastrarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        tela.dispose();
        HomeProfessor telaRecarregar = new HomeProfessor(this.user);
        telaRecarregar.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    public static boolean validarValor(String valor) {
        if (valor.isEmpty()) {
            return false;
        }
        String regex = "^[0-9]{1,45}$";
        return valor.matches(regex);
    }

    public static boolean validarTitulo(String titulo) {
        // Regex para verificar se o nome contém apenas letras e espaços em branco
        if (titulo.length() < 3) {
            return false;
        }

        String regex = "^[a-zA-Z\\s]+$";

        // Verifica se o nome corresponde ao regex
        return titulo.matches(regex);
    }

    private boolean bolsaIsValid() {
        String titulo = tituloTf.getText();
        int tipoBolsa = tipoBolsaSelect.getSelectedIndex();
        //String professor = professorTf.getText();
        String valor = valorTf.getText();
        String cargaHoraria = cargaHorariaTf1.getText();
        int metodoEntrada = metodoEntradaSelect.getSelectedIndex();
        int vagas = (int) qtdVagasSpinner.getValue();

        if (validarTitulo(titulo)) {
            if (tipoBolsa != 0) {
                if (validarValor(valor)) {
                    if (validarValor(cargaHoraria)) {
                        if (metodoEntrada != 0) {
                            return true;
                        } else {
                            JOptionPane.showMessageDialog(this, "Escolha um método de entrada", "Erro", JOptionPane.ERROR_MESSAGE);

                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Adicione uma carga horaria valida", "Erro", JOptionPane.ERROR_MESSAGE);

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Adicione um valor válido", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione o tipo de bolsa", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Insira um título válido", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroBolsa(null).setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JTextField cargaHorariaTf1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCargaHor;
    private javax.swing.JLabel labelMetodoEntrada;
    private javax.swing.JLabel labelPreRequisitos1;
    private javax.swing.JLabel labelTipo;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelVagas;
    private javax.swing.JLabel labelValor;
    private javax.swing.JList<String> listaPreRequisitosSelect;
    private javax.swing.JComboBox<String> metodoEntradaSelect;
    private javax.swing.JSpinner qtdVagasSpinner;
    private javax.swing.JComboBox<String> tipoBolsaSelect;
    private javax.swing.JLabel tituloPrincipal;
    private javax.swing.JTextField tituloTf;
    private javax.swing.JTextField valorTf;
    // End of variables declaration//GEN-END:variables
}
