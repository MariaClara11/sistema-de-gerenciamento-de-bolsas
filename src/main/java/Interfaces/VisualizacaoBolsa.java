/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Persistence.BolsaExtensaoPersistence;
import Persistence.IniciacaoCientificaPersistence;
import Persistence.MonitoriaPersistence;
import Persistence.TreinamentoProfissionalPersistence;
import com.mycompany.sistemadegerenciamentodebolsas.Aluno;
import com.mycompany.sistemadegerenciamentodebolsas.Extensao;
import com.mycompany.sistemadegerenciamentodebolsas.IniciacaoCientifica;
import com.mycompany.sistemadegerenciamentodebolsas.Monitoria;
import com.mycompany.sistemadegerenciamentodebolsas.Professor;
import com.mycompany.sistemadegerenciamentodebolsas.Projeto;
import com.mycompany.sistemadegerenciamentodebolsas.TreinamentoProfissional;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author igor
 */
public class VisualizacaoBolsa extends javax.swing.JFrame {

    DefaultListModel model = new DefaultListModel();
    Projeto bolsa;

    HomeProfessor tela;
    /**
     * Creates new form VisualizacaoBolsa
     */
    public VisualizacaoBolsa(Projeto bolsa, HomeProfessor tela) {
        initComponents();
        this.bolsa = bolsa;
        this.listAlunos.setModel(model);
        setLocationRelativeTo(null);
        this.tela = tela;
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        professorTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAlunos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        nomeTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        horaTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        valorTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tipoTF = new javax.swing.JTextField();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        qtdVagas = new javax.swing.JSpinner();
        reqTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(720, 398));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Professor : ");

        professorTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        professorTF.setEnabled(false);
        professorTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professorTFActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Pre-Requisitos : ");

        listAlunos.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        listAlunos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listAlunos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listAlunos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAlunosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listAlunos);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Alunos inscritos:");

        nomeTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        nomeTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nomeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTFActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Carga Hor√°ria :");

        horaTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        horaTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaTFActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Valor :");

        valorTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        valorTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorTFActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Tipo :");

        tipoTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        tipoTF.setEnabled(false);
        tipoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoTFActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(255, 51, 51));
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExcluirMouseClicked(evt);
            }
        });
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(65, 142, 218));
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Vagas :");

        qtdVagas.setModel(new javax.swing.SpinnerNumberModel(1, 1, 15, 1));
        qtdVagas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        reqTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        reqTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqTFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nomeTF))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(professorTF)
                                            .addComponent(horaTF)
                                            .addComponent(valorTF)
                                            .addComponent(tipoTF)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(qtdVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 74, Short.MAX_VALUE))
                                            .addComponent(reqTF, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))))))
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(nomeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(professorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(24, 24, 24)
                        .addComponent(tipoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reqTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(horaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(5, 5, 5)
                        .addComponent(valorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(qtdVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirMouseClicked

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        String tipoDaBolsa = this.bolsa.retornaTipo();

        if (tipoDaBolsa.equals("Inicia√ß√£o Cient√≠fica")) {

            IniciacaoCientificaPersistence ic = new IniciacaoCientificaPersistence();
            List<IniciacaoCientifica> bolsasIC = new ArrayList<>();
            bolsasIC = ic.findAll();
            
            int resposta = JOptionPane.showConfirmDialog(null, "Gostaria mesmo de excluir essa bolsa?", "Confirma√ß√£o de Exclus√£o", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                for (IniciacaoCientifica a : bolsasIC) {
                    if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                        bolsasIC.remove(a);
                        ic.replace(bolsasIC);
                        tela.atualizarTela();
                        dispose();
                        break;
                    }
                }
            } else {
                dispose();
            }

        } else if (tipoDaBolsa.equals("Treinamento Profissional")) {
            TreinamentoProfissionalPersistence tp = new TreinamentoProfissionalPersistence();
            List<TreinamentoProfissional> bolsasTP = new ArrayList<>();
            bolsasTP = tp.findAll();

            int resposta = JOptionPane.showConfirmDialog(null, "Gostaria mesmo de excluir essa bolsa?", "Confirma√ß√£o de Exclus√£o", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                for (TreinamentoProfissional a : bolsasTP) {
                    if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                        bolsasTP.remove(a);
                        tp.replace(bolsasTP);
                        tela.atualizarTela();
                        dispose();
                        break;
                    }
                }
            } else {
                dispose();
            }

        } else if (tipoDaBolsa.equals("Monitoria")) {
            MonitoriaPersistence mo = new MonitoriaPersistence();
            List<Monitoria> bolsasMonitoria = new ArrayList<>();
            bolsasMonitoria = mo.findAll();

            int resposta = JOptionPane.showConfirmDialog(null, "Gostaria mesmo de excluir essa bolsa?", "Confirma√ß√£o de Exclus√£o", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                for (Monitoria a : bolsasMonitoria) {
                    if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                        bolsasMonitoria.remove(a);
                        mo.replace(bolsasMonitoria);
                        tela.atualizarTela();
                        dispose();
                        break;
                    }
                }
            } else {
                dispose();
            }

        } else if (tipoDaBolsa.equals("Bolsa Extensao")) {
            BolsaExtensaoPersistence be = new BolsaExtensaoPersistence();
            List<Extensao> bolsasBE = new ArrayList<>();
            bolsasBE = be.findAll();

            int resposta = JOptionPane.showConfirmDialog(null, "Gostaria mesmo de excluir essa bolsa?", "Confirma√ß√£o de Exclus√£o", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                for (Extensao a : bolsasBE) {
                    if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                        bolsasBE.remove(a);
                        be.replace(bolsasBE);
                        tela.atualizarTela();
                        dispose();
                        break;
                    }
                }
            } else {
                dispose();
            }

        }
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void valorTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorTFActionPerformed

    private void nomeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTFActionPerformed

    private void horaTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaTFActionPerformed

    private void tipoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoTFActionPerformed

    private void professorTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professorTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_professorTFActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        this.nomeTF.setText(this.bolsa.getTitulo());

        this.professorTF.setText(this.bolsa.getProfessorResponsavel());

        String listb = new String();
        for (String p : this.bolsa.getPreRequisitos()) {
            listb = listb.concat("[");
            listb = listb.concat(p);
            listb = listb.concat("]");
        }

        this.reqTF.setText(listb);

        String valor = String.format("%.2f", this.bolsa.getValor());
        this.valorTF.setText(valor);

        String hora = Integer.toString(this.bolsa.getQuantidadeHoras());
        this.horaTF.setText(hora);

        this.tipoTF.setText(this.bolsa.retornaTipo());

        for (Aluno a : this.bolsa.getAlunosCadastrados()) {
            model.addElement(a.getNome());
        }


    }//GEN-LAST:event_formWindowOpened

    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        //String valor = String.format("%.2f", this.bolsa.getValor());
        String valorS = this.valorTF.getText();
        valorS = valorS.replace(",", ".");
        float valorF = Float.parseFloat(valorS);
        this.bolsa.setValor(valorF);

        this.bolsa.setQuantidadeHoras(Integer.parseInt(this.horaTF.getText()));
        this.bolsa.setVagas((int) this.qtdVagas.getValue());

        String tipoDaBolsa = this.bolsa.retornaTipo();

        if (tipoDaBolsa.equals("Treinamento Profissional")) {
            TreinamentoProfissionalPersistence tp = new TreinamentoProfissionalPersistence();
            List<TreinamentoProfissional> bolsasTP = new ArrayList<>();
            bolsasTP = tp.findAll();
            for (TreinamentoProfissional a : bolsasTP) {
                if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                    // bolsasIC.add(a);
                    this.bolsa.setTitulo(this.nomeTF.getText());
                    a.setTitulo(this.nomeTF.getText());

                    valorS = this.valorTF.getText();
                    valorS = valorS.replace(",", ".");
                    valorF = Float.parseFloat(valorS);
                    a.setValor(valorF);

                    a.setQuantidadeHoras(Integer.parseInt(this.horaTF.getText()));
                    a.setVagas((int) this.qtdVagas.getValue());

                    tp.replace(bolsasTP);
                    dispose();
                    break;
                }
            }
        } else if (tipoDaBolsa.equals("Inicia√ß√£o Cient√≠fica")) {
            IniciacaoCientificaPersistence ic = new IniciacaoCientificaPersistence();
            List<IniciacaoCientifica> bolsasIC = new ArrayList<>();
            bolsasIC = ic.findAll();
            for (IniciacaoCientifica a : bolsasIC) {
                if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                    this.bolsa.setTitulo(this.nomeTF.getText());
                    // bolsasIC.add(a);
                    a.setTitulo(this.nomeTF.getText());

                    valorS = this.valorTF.getText();
                    valorS = valorS.replace(",", ".");
                    valorF = Float.parseFloat(valorS);
                    a.setValor(valorF);

                    a.setQuantidadeHoras(Integer.parseInt(this.horaTF.getText()));
                    a.setVagas((int) this.qtdVagas.getValue());

                    ic.replace(bolsasIC);
                    dispose();
                    break;
                }
            }
        } else if (tipoDaBolsa.equals("Monitoria")) {

            MonitoriaPersistence mo = new MonitoriaPersistence();
            List<Monitoria> bolsasMO = new ArrayList<>();
            bolsasMO = mo.findAll();
            for (Monitoria a : bolsasMO) {
                if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                    this.bolsa.setTitulo(this.nomeTF.getText());
                    // bolsasIC.add(a);
                    a.setTitulo(this.nomeTF.getText());

                    valorS = this.valorTF.getText();
                    valorS = valorS.replace(",", ".");
                    valorF = Float.parseFloat(valorS);
                    a.setValor(valorF);

                    a.setQuantidadeHoras(Integer.parseInt(this.horaTF.getText()));
                    a.setVagas((int) this.qtdVagas.getValue());

                    mo.replace(bolsasMO);
                    dispose();
                    break;
                }
            }

        } else if (tipoDaBolsa.equals("Bolsa Extensao")) {

            BolsaExtensaoPersistence mo = new BolsaExtensaoPersistence();
            List<Extensao> bolsasBE = new ArrayList<>();
            bolsasBE = mo.findAll();
            for (Extensao a : bolsasBE) {
                if (a.getTitulo().equals(this.bolsa.getTitulo())) {
                    this.bolsa.setTitulo(this.nomeTF.getText());
                    // bolsasIC.add(a);
                    a.setTitulo(this.nomeTF.getText());

                    valorS = this.valorTF.getText();
                    valorS = valorS.replace(",", ".");
                    valorF = Float.parseFloat(valorS);
                    a.setValor(valorF);

                    a.setQuantidadeHoras(Integer.parseInt(this.horaTF.getText()));
                    a.setVagas((int) this.qtdVagas.getValue());

                    mo.replace(bolsasBE);
                    dispose();
                    break;
                }
            }

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void reqTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reqTFActionPerformed

    private void listAlunosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAlunosMouseClicked
        
    }//GEN-LAST:event_listAlunosMouseClicked

    /**
     * @param args the command line arguments
     */
    private boolean bolsaIsValid() {

        String professor = professorTF.getText();
        String requisitos = nomeTF.getText();
        String valorS = valorTF.getText();
        String horariaS = horaTF.getText();
        String tipo = tipoTF.getText();

        int valor;
        int horaria;

        try {
            valor = Integer.parseInt(valorS);
            horaria = Integer.parseInt(horariaS);
            // C√≥digo a ser executado se a convers√£o for bem-sucedida
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, complete as informa√ß√µes da bolsa",
                    "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
            // C√≥digo de tratamento para quando a convers√£o falha
        }

        if (valor <= 0 || horaria <= 0) {
            JOptionPane.showMessageDialog(null, "Digite um Valor e uma Carga Horaria valida",
                    "Aviso", JOptionPane.WARNING_MESSAGE);
            return false; // Verifica se campos obrigat√≥rios est√£o vazios
        } else {
            return true;
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualizacaoBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualizacaoBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualizacaoBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualizacaoBolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisualizacaoBolsa(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JTextField horaTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Aluno> listAlunos;
    private javax.swing.JTextField nomeTF;
    private javax.swing.JTextField professorTF;
    private javax.swing.JSpinner qtdVagas;
    private javax.swing.JTextField reqTF;
    private javax.swing.JTextField tipoTF;
    private javax.swing.JTextField valorTF;
    // End of variables declaration//GEN-END:variables
}
